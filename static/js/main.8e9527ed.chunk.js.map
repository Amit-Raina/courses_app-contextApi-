{"version":3,"sources":["Reusable_Component/Header/Header.js","myContext/myContext.js","Component/AddCourse/AddCourse.js","Reusable_Component/ContentTile/ContentTile.js","Component/CoursesScreen/CoursesScreen.js","Component/EditCourse/EditCourse.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","style","textDecoration","myState","React","createContext","mySetState","AddCourse","useState","isEmpty","title","author","category","length","redirect","details","setDetails","state","useContext","setState","submitData","data","alert","id","CourseDetails","selectedToUpdate","required","type","value","placeholder","onChange","event","target","name","onClick","aria-hidden","ContentTile","props","currentSelected","backgroundColor","checked","color","CoursesScreen","currentlyOn","setCurrenlyOn","updatedCourseDetails","filter","key","parseInt","deleteCourse","cellSpacing","map","index","EditCourse","submitValues","courseData","newCourseDetails","editCourse","defaultValue","App","Provider","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e9527ed.chunk.js","sourcesContent":["import { Fragment } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"main-header\">\r\n        <div className=\"header-text\">\r\n          <div className=\"text\">\r\n            <p className=\"text-home\">Home</p>\r\n            <NavLink to=\"/\" style={{ textDecoration: \"none\" }}>\r\n              {\" \"}\r\n              <p className=\"text-courses\">Courses</p>{\" \"}\r\n            </NavLink>\r\n            <p className=\"text-about\">About</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport const myState = React.createContext();\r\nexport const mySetState = React.createContext();\r\n\r\n","import {  Fragment } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport Header from \"../../Reusable_Component/Header/Header\";\r\nimport \"./AddCourse.css\";\r\nimport {useState , useContext} from 'react'\r\nimport {mySetState,myState} from \"../../myContext/myContext\";\r\n\r\n\r\nfunction AddCourse () {\r\n\r\n  const [details,setDetails] = useState({\r\n    isEmpty: true,\r\n    title: \"\",\r\n    author: \"\",\r\n    category: \"\",\r\n    length: \"\",\r\n    redirect: \"/add-course\",\r\n  })\r\n  const state = useContext(myState);\r\n  const setState = useContext(mySetState);\r\n \r\n\r\n  function getTitle(value){\r\n    setDetails({...details,\r\n      title: value,\r\n      isEmpty: value.length === 0,\r\n    });\r\n  };\r\n\r\n  function getAuthor(value){\r\n    setDetails({...details,\r\n      author: value,\r\n      isEmpty: value.length === 0,\r\n    });\r\n  };\r\n\r\n  function getCategory(value){\r\n    setDetails({...details,\r\n      category: value,\r\n      isEmpty: value.length === 0,\r\n    });\r\n  };\r\n\r\n  function getlength(value){\r\n    setDetails({...details,\r\n      length: value,\r\n      isEmpty: value.length === 0,\r\n    });\r\n  };\r\n\r\n  function clearValues (){\r\n    setDetails({...details,\r\n      isEmpty: true,\r\n      title: \"\",\r\n      author: \"\",\r\n      category: \"\",\r\n      length: \"\",\r\n    });\r\n  };\r\n\r\n  function checkValidity (){\r\n    if (details.title.length === 0) {\r\n      alert(\"Enter Title\");\r\n      return false;\r\n    }\r\n    if (details.author.length === 0) {\r\n      alert(\"Enter Author\");\r\n      return false;\r\n    }\r\n    if (details.category.length === 0) {\r\n      alert(\"Enter Category\");\r\n      return false;\r\n    }\r\n    if (details.length.length === 0) {\r\n      alert(\"Enter Length\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n \r\n\r\n  function submitData (){\r\n    if (checkValidity()) {\r\n      addCourse({\r\n        id: state.CourseDetails.length + 1,\r\n        title: details.title,\r\n        length:details.length,\r\n        category: details.category,\r\n        author: details.author,\r\n      });\r\n      setDetails({\r\n        ...details,\r\n        redirect: \"/\",\r\n      });\r\n    }\r\n  };\r\n\r\n  function addCourse(data){\r\n    setState({\r\n      ...state,\r\n      CourseDetails: [...state.CourseDetails, data],\r\n      selectedToUpdate: null\r\n    })\r\n } \r\n\r\n    return (\r\n      <Fragment>\r\n        <Header />\r\n        <div className=\"content-body-add-course\">\r\n          <div className=\"add-title\">\r\n            <h1>Add</h1>\r\n          </div>\r\n          <div className=\"fields\">\r\n            <p>Title</p>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={details.title}\r\n              placeholder=\"Title of the course\"\r\n              onChange={(event) => {\r\n                getTitle(event.target.value);\r\n              }}\r\n            />\r\n\r\n            <p>Author</p>\r\n            <select\r\n              required\r\n              name=\"author\"\r\n              value={details.author}\r\n              onChange={(event) => {\r\n                getAuthor(event.target.value);\r\n              }}\r\n            >\r\n              <option value=\"\"></option>\r\n              <option value=\"cory-house\">Cory House</option>\r\n              <option value=\"scott-allen\">Scott Allen</option>\r\n              <option value=\"dan-wahlin\">Dan Wahlin</option>\r\n            </select>\r\n\r\n            <p>Category</p>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={details.category}\r\n              placeholder=\"Category of the course\"\r\n              onChange={(event) => {\r\n                getCategory(event.target.value);\r\n              }}\r\n            />\r\n\r\n            <p>Length</p>\r\n            <input\r\n              required\r\n              type=\"text\"\r\n              value={details.length}\r\n              placeholder=\"Length of course in minutes or hours\"\r\n              onChange={(event) => {\r\n                getlength(event.target.value);\r\n              }}\r\n            />\r\n          </div>\r\n          <br></br>\r\n          <div className=\"buttons\">\r\n            <Redirect to={details.redirect}></Redirect>\r\n            <span className=\"button-submit\" onClick={()=>submitData()}>\r\n              <i className=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i> Submit\r\n            </span>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <span\r\n              className={\r\n                details.isEmpty\r\n                  ? \"button-clear-values-inactive\"\r\n                  : \"button-clear-values-active\"\r\n              }\r\n              onClick={() => {\r\n                clearValues();\r\n              }}\r\n            >\r\n              Clear Values\r\n            </span>\r\n            &nbsp;&nbsp;&nbsp;&nbsp;\r\n            <span\r\n              className=\"button-cancel\"\r\n              onClick={() => {\r\n                setDetails({...details ,  redirect: \"/\" });\r\n                setState({...state , selectedToUpdate: null,})\r\n              }}\r\n            >\r\n              Cancel\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\nexport default AddCourse;\r\n","import { Fragment } from \"react\";\r\nimport \"./ContentTile.css\";\r\n\r\nconst ContentTile = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <tr\r\n        className=\"content-detail\"\r\n        onClick={props.currentSelected}\r\n        style={{ backgroundColor: props.checked ? \"rgb(193,242,145)\" : \"\" }}\r\n      >\r\n        <td className=\"course-title\" style={{ color: \"rgb(2,131,223)\" }}>\r\n          {props.title}\r\n        </td>\r\n        <td>{props.length}</td>\r\n        \r\n        <td>{props.category}</td>\r\n        <td>{props.author}</td>\r\n      </tr>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ContentTile;\r\n","import { Fragment, useContext, useState } from \"react\";\r\nimport \"./CoursesScreen.css\";\r\nimport Header from \"../../Reusable_Component/Header/Header\";\r\nimport ContentTile from \"../../Reusable_Component/ContentTile/ContentTile\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {mySetState,myState} from \"../../myContext/myContext\";\r\n\r\nfunction CoursesScreen(){\r\n  \r\n  const [currentlyOn , setCurrenlyOn] = useState(null);\r\n  const state = useContext(myState);\r\n  const setState = useContext(mySetState);\r\n\r\n  function deleteCourse(){\r\n    \r\n    if (currentlyOn === null) return;\r\n    else {\r\n      const updatedCourseDetails = state.CourseDetails.filter((data) => {\r\n        return data.id !== currentlyOn;\r\n      });\r\n      for (let key in updatedCourseDetails) {\r\n        updatedCourseDetails[key].id = parseInt(key) + 1;\r\n      }\r\n\r\n      setState({...state,\r\n        CourseDetails: updatedCourseDetails})\r\n    }\r\n  }\r\n    return (\r\n      <Fragment>\r\n      <Header />\r\n      <div className=\"content-body\">\r\n        <div className=\"title\">\r\n          <h1>Courses</h1>\r\n        </div>\r\n        <div className=\"options-bar\">\r\n          <NavLink to=\"/add-course\" style={{ textDecoration: \"none\" }}>\r\n            <div className=\"options-bar-new\">\r\n              <i className=\"fa fa-plus\" aria-hidden=\"true\"></i> New\r\n            </div>\r\n          </NavLink>\r\n          &nbsp;&nbsp;\r\n          <NavLink\r\n            to={currentlyOn === null ? \"\" : \"/edit-course\"}\r\n            style={{ textDecoration: \"none\" }}\r\n          >\r\n            <div className=\"options-bar-edit\">\r\n              <i className=\"fa fa-pencil\" aria-hidden=\"true\"></i> Edit\r\n            </div>\r\n          </NavLink>\r\n          &nbsp;&nbsp;\r\n          <div\r\n            className=\"options-bar-delete\"\r\n            onClick={() => deleteCourse()}\r\n          >\r\n            <i className=\"fa fa-trash-o\" aria-hidden=\"true\"></i> Delete\r\n          </div>\r\n        </div>\r\n        <div className=\"course-details\">\r\n          <table className=\"table-structure\" cellSpacing=\"0\">\r\n            <thead>\r\n              <tr className=\"table-header\">\r\n                <th>\r\n                  Title <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                </th>\r\n                <th>\r\n                  Length <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                </th>\r\n                <th>\r\n                  Category{\" \"}\r\n                  <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                </th>\r\n                <th>\r\n                  Author <i className=\"fa fa-sort\" aria-hidden=\"true\"></i>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {state.CourseDetails.length === 0 ? (\r\n                <ContentTile category=\"No Data\"></ContentTile>\r\n              ) : (\r\n                state.CourseDetails.map((data, index) => {\r\n                  return (\r\n                    <ContentTile\r\n                      id={data.id}\r\n                      key={index}\r\n                      title={data.title}\r\n                      length={data.length}\r\n                      category={data.category}\r\n                      author={data.author}\r\n                      checked={currentlyOn === data.id}\r\n                      currentSelected={() => {\r\n                        if (currentlyOn === data.id) {\r\n                          setCurrenlyOn(null);\r\n                          setState({...state , selectedToUpdate: null});\r\n                        } else {\r\n                          setCurrenlyOn(data.id);\r\n                          setState({...state , selectedToUpdate: data.id});\r\n                        }\r\n                      }}\r\n                    />\r\n                  );\r\n                })\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n    );\r\n}\r\n\r\nexport default CoursesScreen;\r\n","import { Fragment, useState, useContext } from \"react\";\r\nimport { Redirect } from \"react-router\";\r\nimport Header from \"../../Reusable_Component/Header/Header\";\r\nimport \"../AddCourse/AddCourse.css\";\r\nimport {mySetState,myState} from \"../../myContext/myContext\";\r\n\r\nfunction EditCourse() {\r\n\r\n  const state = useContext(myState);\r\n  const setState = useContext(mySetState);\r\n\r\n  const [details, setDetails] = useState({\r\n    title: state.CourseDetails[state.selectedToUpdate - 1].title,\r\n    author: state.CourseDetails[state.selectedToUpdate - 1].author,\r\n    category: state.CourseDetails[state.selectedToUpdate - 1].category,\r\n    length: state.CourseDetails[state.selectedToUpdate - 1].length,\r\n    redirect: \"/edit-course\",\r\n  });\r\n\r\n  function getTitle(value){\r\n    setDetails({\r\n      ...details,\r\n      title: value,\r\n    });\r\n  };\r\n\r\n  function getAuthor(value){\r\n    setDetails({\r\n      ...details,\r\n      author: value,\r\n    });\r\n  };\r\n\r\n  function getCategory(value){\r\n    setDetails({\r\n      ...details,\r\n      category: value,\r\n    });\r\n  };\r\n\r\n  function getlength(value){\r\n    setDetails({\r\n      ...details,\r\n      length: value,\r\n    });\r\n  };\r\n\r\n  function checkValidity(){\r\n    if (details.title.length === 0) {\r\n      alert(\"Enter Title\");\r\n      return false;\r\n    }\r\n    if (details.author.length === 0) {\r\n      alert(\"Enter Author\");\r\n      return false;\r\n    }\r\n    if (details.category.length === 0) {\r\n      alert(\"Enter Category\");\r\n      return false;\r\n    }\r\n    if (details.length.length === 0) {\r\n      alert(\"Enter Length\");\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  function submitValues(){\r\n    if (checkValidity()) {\r\n      editCourse(\r\n        {\r\n          id: state.selectedToUpdate,\r\n          title: details.title,\r\n          length: details.length,\r\n          category: details.category,\r\n          author: details.author,\r\n        },\r\n        state.selectedToUpdate\r\n      );\r\n\r\n      setDetails({\r\n        ...details,\r\n        redirect: \"/\",\r\n      });\r\n    }\r\n  };\r\n\r\n  function editCourse(courseData, id){\r\n\r\n    const newCourseDetails = state.CourseDetails.map((data) => {\r\n      if (data.id === id) return courseData;\r\n      return data;\r\n    });\r\n    setState({\r\n      ...state,\r\n      CourseDetails: newCourseDetails,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Header />\r\n      <div className=\"content-body-add-course\">\r\n        <div className=\"add-title\">\r\n          <h1>Edit</h1>\r\n        </div>\r\n        <div className=\"fields\">\r\n          <p>Title</p>\r\n          <input\r\n            type=\"text\"\r\n            value={details.title}\r\n            placeholder=\"Title of the course\"\r\n            onChange={(event) => {\r\n              getTitle(event.target.value);\r\n            }}\r\n          />\r\n\r\n          <p>Author</p>\r\n          <select\r\n            name=\"author\"\r\n            defaultValue={details.author}\r\n            onChange={(event) => {\r\n              getAuthor(event.target.value);\r\n            }}\r\n          >\r\n            <option value=\"\"></option>\r\n            <option value=\"cory-house\">Cory House</option>\r\n            <option value=\"scott-allen\">Scott Allen</option>\r\n            <option value=\"dan-wahlin\">Dan Wahlin</option>\r\n          </select>\r\n\r\n          <p>Category</p>\r\n          <input\r\n            type=\"text\"\r\n            value={details.category}\r\n            placeholder=\"Category of the course\"\r\n            onChange={(event) => {\r\n              getCategory(event.target.value);\r\n            }}\r\n          />\r\n\r\n          <p>Length</p>\r\n          <input\r\n            type=\"text\"\r\n            value={details.length}\r\n            placeholder=\"Length of course in minutes or hours\"\r\n            onChange={(event) => {\r\n              getlength(event.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <br></br>\r\n        <div className=\"buttons\">\r\n          <span className=\"button-submit\" onClick={() => submitValues()}>\r\n            <Redirect to={details.redirect}></Redirect>\r\n            <i className=\"fa fa-paper-plane-o\" aria-hidden=\"true\"></i> Submit\r\n          </span>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;\r\n          <span\r\n            className=\"button-cancel\"\r\n            onClick={() => {\r\n              setDetails({...details, redirect: \"/\" });\r\n            }}\r\n          >\r\n            Cancel\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default EditCourse;\r\n","import { Fragment, useState } from \"react\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport \"./App.css\";\r\nimport AddCourse from \"./Component/AddCourse/AddCourse\";\r\nimport CoursesScreen from \"./Component/CoursesScreen/CoursesScreen\";\r\nimport EditCourse from \"./Component/EditCourse/EditCourse\";\r\nimport {myState , mySetState} from \"./myContext/myContext\";\r\n\r\nfunction App() {\r\n  const [state , setState] = useState({\r\n    CourseDetails: [\r\n      {\r\n        id: 1,\r\n        title: \"Building Applications in React and Flux\",\r\n        length: \"5:08\",\r\n        category: \"JavaScript\",\r\n        author: \"cory-house\",\r\n      },\r\n      {\r\n        id: 2,\r\n        title: \"Clean Code: Writing Code for Humans\",\r\n        length: \"3:10\",\r\n        category: \"Software Practices\",\r\n        author: \"cory-house\",\r\n      },\r\n      {\r\n        id: 3,\r\n        title: \"Architecting Applications for the Real World\",\r\n        length: \"2:52\",\r\n        category: \"Software Architecture\",\r\n        author: \"cory-house\",\r\n      },\r\n      {\r\n        id: 4,\r\n        title: \"Becoming an Outlier: Reprogramming the Developer Mind\",\r\n        length: \"2:30\",\r\n        category: \"Career\",\r\n        author: \"cory-house\",\r\n      },\r\n      {\r\n        id: 5,\r\n        title: \"Web Component Fundamentals\",\r\n        length: \"5:10\",\r\n        category: \"HTML5\",\r\n        author: \"cory-house\",\r\n      },\r\n    ],\r\n    selectedToUpdate: null,\r\n  })\r\n\r\n    return (\r\n      <myState.Provider value={state}>\r\n        <mySetState.Provider value={setState}>\r\n        <Fragment>\r\n          <Switch>\r\n            <Route path=\"/add-course\" component={AddCourse} />\r\n            <Route path=\"/edit-course\" component={EditCourse} />\r\n            <Route path=\"/\" component={CoursesScreen} />\r\n          </Switch>\r\n        </Fragment>\r\n        </mySetState.Provider>\r\n      </myState.Provider>\r\n    );\r\n  }\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}